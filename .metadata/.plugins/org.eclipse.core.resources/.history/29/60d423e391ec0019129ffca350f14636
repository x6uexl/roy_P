package com.lemone.java.maven.day01;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.Properties;

public class FinallyTryCatch {

	public static void main(String[] args) throws FileNotFoundException {
		// loadProperties(filePath);
		// 将文件对象输入到
		Properties properties = new Properties();
		File file =new File("src/test/resource/log4j.properties");
//		String filePath = "src/test/resources/log4j.properties";
		InputStream iStream = new FileInputStream(file);//iStream   读写IO流
		try {
			properties.load(iStream);
		} catch (IOException e) {
			System.out.println("properties文件解析异常");
		}finally {
			//finall 代码块  资源回收  不管try catch 怎么处理finally代码块里面是一定会执行
			if(iStream!=null) {//
				try {
					iStream.close();
				} catch (IOException e) {
					System.out.println("关闭流对象");
				}
			}else {
				System.out.println("istream 为空");
			}
		}
		
		System.out.println(properties.get("log4j.rootLogger"));

	}

}
